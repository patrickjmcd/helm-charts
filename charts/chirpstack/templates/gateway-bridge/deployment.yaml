{{- if .Values.gatewaybridge.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chirpstack.gatewaybridge.fullname" . }}
  labels:
{{ include "chirpstack.gatewaybridge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.gatewaybridge.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
{{ include "chirpstack.gatewaybridge.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "chirpstack.gatewaybridge.labels" . | indent 8 }}
    spec:
      containers:
      - image: {{ printf "%s:%s" .Values.gatewaybridge.image.repository .Values.gatewaybridge.image.tag }}
        name: {{ template "chirpstack.gatewaybridge.fullname" . }}
        env:
        - name: BACKEND__TYPE
          value: {{ .Values.gatewaybridge.backendType }}
{{ if eq .Values.gatewaybridge.backendType "basicstation" }}
        - name: BACKEND__BASIC_STATION__REGION
          value: {{ .Values.gatewaybridge.regionSettings.region }}
        - name: BACKEND__BASIC_STATION__FREQUENCY_MIN
          value: {{ .Values.gatewaybridge.regionSettings.frequencyMin | quote }}
        - name: BACKEND__BASIC_STATION__FREQUENCY_MAX
          value: {{ .Values.gatewaybridge.regionSettings.frequencyMax | quote}}
{{ end }}
        - name: INTEGRATION__MQTT__AUTH__GENERIC__SERVER
          value: {{ .Values.gatewaybridge.integrations.mqtt.server }}
        - name: INTEGRATION__MQTT__AUTH__GENERIC__USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.gatewaybridge.integrations.mqtt.existingSecret }}
              key: username
              optional: true
        - name: INTEGRATION__MQTT__AUTH__GENERIC__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.gatewaybridge.integrations.mqtt.existingSecret  }}
              key: password
              optional: true

        ports:
{{ if eq .Values.gatewaybridge.backendType "semtech_udp"}}
        - containerPort: 1700
          protocol: UDP
{{ end }}
{{ if eq .Values.gatewaybridge.backendType "basicstation"}}
        - containerPort: 3001
          protocol: TCP
{{ end }}
        resources: {}
        volumeMounts: []
      restartPolicy: Always
      volumes: []
{{- end -}}